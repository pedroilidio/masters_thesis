active: true
cv:
  call: bipartite_learn.model_selection.multipartite_cross_validate
  params:
    cv: 4
    diagonal: false
    n_jobs: 16
    pairwise: true
    random_state: 0
    return_estimator: false
    return_train_score: false
    scoring:
    - roc_auc
    - average_precision
    shuffle: true
    verbose: 10
dataset:
  X:
  - force_download: false
    path: datasets/nuclear_receptors/X1.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_X1.txt
  - force_download: false
    path: datasets/nuclear_receptors/X2.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_X2.txt
  name: nuclear_receptors
  pairwise: true
  y:
    force_download: false
    path: datasets/nuclear_receptors/Y.txt
    read:
      call: numpy.loadtxt
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/dpix/dpin_Y.txt
directory: literature_models/runs
end: 2023-11-24 18:53:52.434540
estimator:
  call: literature_models.estimators.lmo_rls
  final_params:
    cv:
      call: bipartite_learn.model_selection._split.MultipartiteCrossValidator
      params: {}
    diagonal: false
    error_score: .nan
    estimator:
      call: imblearn.pipeline.Pipeline
      params:
        memory: null
        steps:
        - - targetkernellinearcombiner
          - call: bipartite_learn.wrappers.MultipartiteSamplerWrapper
            params:
              ndim: 2
              samplers:
                call: bipartite_learn.preprocessing.monopartite.TargetKernelLinearCombiner
                params:
                  alpha: 0.5
                  filter_params: false
                  gamma: 1.0
                  gamma_scale: squares
                  metric: rbf
                  n_jobs: null
        - - localmultioutputwrapper
          - call: bipartite_learn.wrappers.LocalMultiOutputWrapper
            params:
              combine_func_kwargs: null
              combine_predictions_func:
                load: numpy.mean
              independent_labels: false
              primary_cols_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              primary_rows_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              secondary_cols_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
              secondary_rows_estimator:
                call: sklearn.kernel_ridge.KernelRidge
                params:
                  alpha: 1
                  coef0: 1
                  degree: 3
                  gamma: null
                  kernel: precomputed
                  kernel_params: null
        verbose: false
    n_jobs: 4
    pairwise: true
    param_grid:
      targetkernellinearcombiner__samplers__alpha:
      - 0.0
      - 0.1
      - 0.25
      - 0.5
      - 0.75
      - 0.9
      - 1.0
    pre_dispatch: 2*n_jobs
    refit: true
    return_train_score: false
    scoring: neg_mean_squared_error
    train_test_combinations: null
    verbose: 0
  name: lmo_rls
  params: {}
hash: 4a70d71ccb167d199f36bc5f5b039806dc3c5ce30bf1ef8804fb8caf00d94080
path: "/home/pedro/mestrado/disserta\xE7\xE3o/experiments/literature_models/runs/4a70d71_20231124T185351098985_lmo_rls_nuclear_receptors.yml"
results:
  LL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  fit_time:
  - 1.2058720588684082
  - 1.263274908065796
  - 1.2390799522399902
  - 1.1842918395996094
  - 1.2298898696899414
  - 1.2188506126403809
  - 1.2382996082305908
  - 1.204289197921753
  - 1.2334394454956055
  - 1.212716817855835
  - 1.2007501125335693
  - 1.1986024379730225
  - 1.2065794467926025
  - 1.2499151229858398
  - 1.271296739578247
  - 1.2854876518249512
  score_time:
  - 0.007840633392333984
  - 0.007309913635253906
  - 0.0073680877685546875
  - 0.007817268371582031
  - 0.007332801818847656
  - 0.0073239803314208984
  - 0.0074160099029541016
  - 0.007817506790161133
  - 0.008327007293701172
  - 0.007896900177001953
  - 0.006499528884887695
  - 0.007325410842895508
  - 0.008117914199829102
  - 0.008069753646850586
  - 0.007703304290771484
  - 0.007424592971801758
start: 2023-11-24 18:53:51.098985
wrapper: null
