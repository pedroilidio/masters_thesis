active: true
cv:
  call: bipartite_learn.model_selection.multipartite_cross_validate
  params:
    cv: 4
    diagonal: false
    n_jobs: 4
    pairwise: true
    random_state: 0
    return_estimator: false
    return_train_score: false
    scoring:
    - roc_auc
    - average_precision
    shuffle: true
    verbose: 10
dataset:
  X:
  - force_download: false
    path: datasets/ern/X1.txt
    read:
      call: data_loading.load_regulatory_network_features
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/ern/X1.txt
  - force_download: false
    path: datasets/ern/X2.txt
    read:
      call: data_loading.load_regulatory_network_features
      params: {}
    url: https://people.montefiore.uliege.be/schrynemackers/ern/X2.txt
  name: ern
  pairwise: true
  y:
    force_download: false
    path: datasets/ern/Y.txt
    read:
      call: numpy.loadtxt
      params:
        delimiter: ','
    url: https://people.montefiore.uliege.be/schrynemackers/ern/Y.txt
directory: literature_models/runs
end: 2023-11-29 22:44:04.175178
estimator:
  call: literature_models.estimators.blmnii_svm
  final_params:
    cv:
      call: bipartite_learn.model_selection._split.MultipartiteCrossValidator
      params: {}
    diagonal: false
    error_score: .nan
    estimator:
      call: imblearn.pipeline.Pipeline
      params:
        memory: null
        steps:
        - - symmetryenforcer
          - call: bipartite_learn.wrappers.MultipartiteSamplerWrapper
            params:
              ndim: 2
              samplers:
                call: bipartite_learn.preprocessing.monopartite.SymmetryEnforcer
                params:
                  sampling_strategy: auto
        - - targetkernellinearcombiner
          - call: bipartite_learn.wrappers.MultipartiteSamplerWrapper
            params:
              ndim: 2
              samplers:
                call: bipartite_learn.preprocessing.monopartite.TargetKernelLinearCombiner
                params:
                  alpha: 0.5
                  filter_params: false
                  gamma: 1.0
                  gamma_scale: squares
                  metric: rbf
                  n_jobs: null
        - - localmultioutputwrapper
          - call: bipartite_learn.wrappers.LocalMultiOutputWrapper
            params:
              combine_func_kwargs: null
              combine_predictions_func:
                load: numpy.mean
              independent_labels: true
              primary_cols_estimator:
                call: bipartite_learn.neighbors.WeightedNeighborsRegressor
                params:
                  metric: precomputed
                  metric_params: null
                  n_jobs: null
                  p: 2
                  weights: similarity
              primary_rows_estimator:
                call: bipartite_learn.neighbors.WeightedNeighborsRegressor
                params:
                  metric: precomputed
                  metric_params: null
                  n_jobs: null
                  p: 2
                  weights: similarity
              secondary_cols_estimator:
                call: sklearn.multioutput.MultiOutputRegressor
                params:
                  estimator:
                    call: sklearn.svm._classes.SVR
                    params:
                      C: 1.0
                      cache_size: 200
                      coef0: 0.0
                      degree: 3
                      epsilon: 0.1
                      gamma: scale
                      kernel: precomputed
                      max_iter: -1
                      shrinking: true
                      tol: 0.001
                      verbose: false
                  n_jobs: null
              secondary_rows_estimator:
                call: sklearn.multioutput.MultiOutputRegressor
                params:
                  estimator:
                    call: sklearn.svm._classes.SVR
                    params:
                      C: 1.0
                      cache_size: 200
                      coef0: 0.0
                      degree: 3
                      epsilon: 0.1
                      gamma: scale
                      kernel: precomputed
                      max_iter: -1
                      shrinking: true
                      tol: 0.001
                      verbose: false
                  n_jobs: null
        verbose: false
    n_jobs: 4
    pairwise: true
    param_grid:
      targetkernellinearcombiner__samplers__alpha:
      - 0.0
      - 0.1
      - 0.25
      - 0.5
      - 0.75
      - 0.9
      - 1.0
    pre_dispatch: 2*n_jobs
    refit: true
    return_train_score: false
    scoring: average_precision
    train_test_combinations: null
    verbose: 0
  name: blmnii_svm
  params: {}
hash: e4100427692334930d6bc133e1b8a53e478f1c83fdf67fc91cde0fb8259b651e
path: /home/pedro/master_thesis/experiments/literature_models/runs/e410042_20231129T223659101760_blmnii_svm_ern.yml
results:
  LL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  LT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TL_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_average_precision:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  TT_roc_auc:
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  - .nan
  fit_time:
  - 110.11821699142456
  - 103.74155306816101
  - 107.85111808776855
  - 101.14258694648743
  - 102.92971801757812
  - 98.20830464363098
  - 104.95483732223511
  - 104.10335564613342
  - 101.35661172866821
  - 102.39366245269775
  - 99.20847916603088
  - 106.43334078788757
  - 99.48477387428284
  - 107.71903967857361
  - 103.36824822425842
  - 104.08823847770691
  score_time:
  - 0.009389400482177734
  - 0.0207064151763916
  - 0.019834280014038086
  - 0.020417451858520508
  - 0.009376287460327148
  - 0.019719600677490234
  - 0.019641637802124023
  - 0.01983642578125
  - 0.020407438278198242
  - 0.02202606201171875
  - 0.016120195388793945
  - 0.020030498504638672
  - 0.020580053329467773
  - 0.020612716674804688
  - 0.00937962532043457
  - 0.019819021224975586
start: 2023-11-29 22:36:59.101760
wrapper: null
